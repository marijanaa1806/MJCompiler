// generated with ast extension for cup
// version 0.8
// 7/1/2023 21:32:52


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(ReturnType ReturnType);
    public void visit(Mulop Mulop);
    public void visit(DesListAsgn DesListAsgn);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(ConstDeclElement ConstDeclElement);
    public void visit(TermList TermList);
    public void visit(NumConstList NumConstList);
    public void visit(CondFacts CondFacts);
    public void visit(StatementList StatementList);
    public void visit(FormParsElement FormParsElement);
    public void visit(FactorList FactorList);
    public void visit(Addop Addop);
    public void visit(VarDeclLista VarDeclLista);
    public void visit(Factor Factor);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(DesListAssign DesListAssign);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(DeclElement DeclElement);
    public void visit(CondTerms CondTerms);
    public void visit(VarDeclElement VarDeclElement);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ConstVal ConstVal);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(MethodDeclElement MethodDeclElement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(IfStatement IfStatement);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(Modop Modop);
    public void visit(Divop Divop);
    public void visit(Multop Multop);
    public void visit(Minusop Minusop);
    public void visit(Plusop Plusop);
    public void visit(LstEqu LstEqu);
    public void visit(Lst Lst);
    public void visit(GrtEqu GrtEqu);
    public void visit(Grt Grt);
    public void visit(NotEqu NotEqu);
    public void visit(Equ Equ);
    public void visit(AssignOp AssignOp);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewNoPars FactorNewNoPars);
    public void visit(FactorNewActPars FactorNewActPars);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactBo FactBo);
    public void visit(FactCh FactCh);
    public void visit(FactNum FactNum);
    public void visit(FactorDesAct FactorDesAct);
    public void visit(EmptyDesCall EmptyDesCall);
    public void visit(FactorDesSingle FactorDesSingle);
    public void visit(FactorSingle FactorSingle);
    public void visit(MulopList MulopList);
    public void visit(TermFactL TermFactL);
    public void visit(TermSingle TermSingle);
    public void visit(AddopList AddopList);
    public void visit(MinusTerm MinusTerm);
    public void visit(NegatedTerm NegatedTerm);
    public void visit(ExprTermL ExprTermL);
    public void visit(OneActPar OneActPar);
    public void visit(ActParsDecl ActParsDecl);
    public void visit(Label Label);
    public void visit(StartArray StartArray);
    public void visit(DesignatorExprEl DesignatorExprEl);
    public void visit(DesignatorIdentEl DesignatorIdentEl);
    public void visit(DesignatorDecl DesignatorDecl);
    public void visit(EmptyArrayAsign EmptyArrayAsign);
    public void visit(SkippedDes SkippedDes);
    public void visit(ArrayAsign ArrayAsign);
    public void visit(CommaIn CommaIn);
    public void visit(CommaSkip CommaSkip);
    public void visit(NoDesAsignList NoDesAsignList);
    public void visit(ArrayAsignList ArrayAsignList);
    public void visit(DesAsignList DesAsignList);
    public void visit(DesDec DesDec);
    public void visit(DesInc DesInc);
    public void visit(FuncCallNoAct FuncCallNoAct);
    public void visit(FuncCallActP FuncCallActP);
    public void visit(DesAssign DesAssign);
    public void visit(FuncCall FuncCall);
    public void visit(RelopCondFact RelopCondFact);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondFactSingle CondFactSingle);
    public void visit(AndList AndList);
    public void visit(CondTerm CondTerm);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(OrList OrList);
    public void visit(OrOp OrOp);
    public void visit(Condition Condition);
    public void visit(NoNum NoNum);
    public void visit(WithNum WithNum);
    public void visit(InWhile InWhile);
    public void visit(EndFor EndFor);
    public void visit(InFor InFor);
    public void visit(ForEIdent ForEIdent);
    public void visit(AssignError AssignError);
    public void visit(BraceStatList BraceStatList);
    public void visit(ForeachStat ForeachStat);
    public void visit(PrintStat PrintStat);
    public void visit(ReadStat ReadStat);
    public void visit(NoReturnStat NoReturnStat);
    public void visit(ReturnStat ReturnStat);
    public void visit(ContinueStat ContinueStat);
    public void visit(BreakStat BreakStat);
    public void visit(WhileStat WhileStat);
    public void visit(IfElseStat IfElseStat);
    public void visit(DesignatorStat DesignatorStat);
    public void visit(IfError IfError);
    public void visit(WhileUnmatch WhileUnmatch);
    public void visit(IfElseUnmatch IfElseUnmatch);
    public void visit(IfSingleStat IfSingleStat);
    public void visit(IfCond IfCond);
    public void visit(IfStart IfStart);
    public void visit(ElseStart ElseStart);
    public void visit(WhileMatchEnd WhileMatchEnd);
    public void visit(WhileUnmatchEnd WhileUnmatchEnd);
    public void visit(WhileCond WhileCond);
    public void visit(WhileStart WhileStart);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(Type Type);
    public void visit(FormParameter FormParameter);
    public void visit(ArrayFormPar ArrayFormPar);
    public void visit(VarFormPar VarFormPar);
    public void visit(ErrorFormParCm ErrorFormParCm);
    public void visit(ListFormPars ListFormPars);
    public void visit(ElemFormPars ElemFormPars);
    public void visit(EndFormPar EndFormPar);
    public void visit(ErrorFormParRp ErrorFormParRp);
    public void visit(NoFparMetohdDecl NoFparMetohdDecl);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(EmptyMethodDecl EmptyMethodDecl);
    public void visit(MethodDecl MethodDecl);
    public void visit(VoidFunc VoidFunc);
    public void visit(TypeFunc TypeFunc);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(VarDeclArray VarDeclArray);
    public void visit(VarDeclIdent VarDeclIdent);
    public void visit(ErrorVarComma ErrorVarComma);
    public void visit(VarListDecl VarListDecl);
    public void visit(VarElemDecl VarElemDecl);
    public void visit(ErrorVarSemi ErrorVarSemi);
    public void visit(VariableDecl VariableDecl);
    public void visit(NoVarList NoVarList);
    public void visit(VarDl VarDl);
    public void visit(ConstValueB ConstValueB);
    public void visit(ConstValueC ConstValueC);
    public void visit(ConstValueN ConstValueN);
    public void visit(ConstDec ConstDec);
    public void visit(ConstDeclEl ConstDeclEl);
    public void visit(ConstListDecl ConstListDecl);
    public void visit(DeclConst DeclConst);
    public void visit(DeclVariables DeclVariables);
    public void visit(DeclConstants DeclConstants);
    public void visit(NoDeclaration NoDeclaration);
    public void visit(ListDeclarations ListDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
